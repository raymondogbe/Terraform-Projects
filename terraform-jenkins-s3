provider "aws" {
  region     = "us-east-2"
  access_key = ""
  secret_key = ""
}

#1 -this will create a S3 bucket in AWS
resource "aws_s3_bucket" "terraform_state_s3" {
  #make sure you give unique bucket name
  bucket = "terraform-teknobucket1-state" 
  force_destroy = true
# Enable versioning to see full revision history of our state files
  versioning {
         enabled = true
        }

# Enable server-side encryption by default
server_side_encryption_configuration {
    rule {
      apply_server_side_encryption_by_default {
        sse_algorithm = "AES256"
      }
    }
  }
}

# 2 - this Creates Dynamo Table
resource "aws_dynamodb_table" "terraform_locks" {
# Give unique name for dynamo table name
  name         = "TerraFom1-up-and-run-locks"
  billing_mode = "PAY_PER_REQUEST"
  hash_key     = "LockID"
        attribute {
         name = "LockID"
         type = "S"
      }
}


This must be in variable.tf
variable "region" {
    default = "us-east-2"
}

variable "instance_type" {
    default = "t2.micro"
} 


Jenkins
Create your jenkins pipepline
Use a project parametarization, that is choice parameter which first choce is apply and the other is destroy and name = action.

Pipeline code
pipeline
  agent any
  stages {
    stage ("checkout") {
      steps {
      git branch password...... github url
             }
    stage ("terraform init"){
      steps {
          bat or sh ("terraform init")
          }
         }
    stange ("Terraform action")
      steps {
        echo "Terraform action is --> ${action}"
        bat or sh (terraform ${action} --auto-approve")
        }
       }
      }
     }
      

This is when I added a s3 backend
provider "aws" {
  region     = "us-east-1"
  //access_key = ""
  //secret_key = ""
}

#1 -this will create a S3 bucket in AWS
resource "aws_s3_bucket" "terraform_state_s3" {
  #make sure you give unique bucket name
  bucket = "terraform-teknobucket1-state111100" 
  force_destroy = true
# Enable versioning to see full revision history of our state files
  versioning {
         enabled = true
        }

# Enable server-side encryption by default
server_side_encryption_configuration {
    rule {
      apply_server_side_encryption_by_default {
        sse_algorithm = "AES256"
      }
    }
  }
}

# 2 - this Creates Dynamo Table
resource "aws_dynamodb_table" "terraform_locks" {
# Give unique name for dynamo table name
  name         = "TerraFom1-up-and-run-locks"
  billing_mode = "PAY_PER_REQUEST"
  hash_key     = "LockID"
        attribute {
         name = "LockID"
         type = "S"
      }
}
terraform {
  backend "s3" {
    # Replace this with your bucket name!
    bucket         = "terraform-teknobucket1-state111100"
    key            = "global/s3/terraform.tfstate"
    region         = "us-east-1"

    # Replace this with your DynamoDB table name!
    dynamodb_table = "TerraFom1-up-and-run-locks"
    encrypt        = true
  }
}

When a backend is added, remember to have run or created the s3 before adding the backend
